/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.8.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.kubernetes.client.apis;

import io.kubernetes.client.ApiException;
import io.kubernetes.client.models.V1APIResourceList;
import io.kubernetes.client.models.V1DeleteOptions;
import io.kubernetes.client.models.V1Status;
import io.kubernetes.client.models.V1beta1PodDisruptionBudget;
import io.kubernetes.client.models.V1beta1PodDisruptionBudgetList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PolicyV1beta1Api
 */
@Ignore
public class PolicyV1beta1ApiTest {

    private final PolicyV1beta1Api api = new PolicyV1beta1Api();

    
    /**
     * 
     *
     * create a PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNamespacedPodDisruptionBudgetTest() throws ApiException {
        String namespace = null;
        V1beta1PodDisruptionBudget body = null;
        String pretty = null;
        V1beta1PodDisruptionBudget response = api.createNamespacedPodDisruptionBudget(namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollectionNamespacedPodDisruptionBudgetTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1Status response = api.deleteCollectionNamespacedPodDisruptionBudget(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedPodDisruptionBudgetTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedPodDisruptionBudget(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAPIResourcesTest() throws ApiException {
        V1APIResourceList response = api.getAPIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedPodDisruptionBudgetTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1beta1PodDisruptionBudgetList response = api.listNamespacedPodDisruptionBudget(namespace, pretty, _continue, fieldSelector, includeUninitialized, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPodDisruptionBudgetForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1beta1PodDisruptionBudgetList response = api.listPodDisruptionBudgetForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedPodDisruptionBudgetTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1beta1PodDisruptionBudget response = api.patchNamespacedPodDisruptionBudget(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchNamespacedPodDisruptionBudgetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        Object body = null;
        String pretty = null;
        V1beta1PodDisruptionBudget response = api.patchNamespacedPodDisruptionBudgetStatus(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedPodDisruptionBudgetTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        V1beta1PodDisruptionBudget response = api.readNamespacedPodDisruptionBudget(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedPodDisruptionBudgetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1beta1PodDisruptionBudget response = api.readNamespacedPodDisruptionBudgetStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedPodDisruptionBudgetTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1beta1PodDisruptionBudget body = null;
        String pretty = null;
        V1beta1PodDisruptionBudget response = api.replaceNamespacedPodDisruptionBudget(name, namespace, body, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified PodDisruptionBudget
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceNamespacedPodDisruptionBudgetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1beta1PodDisruptionBudget body = null;
        String pretty = null;
        V1beta1PodDisruptionBudget response = api.replaceNamespacedPodDisruptionBudgetStatus(name, namespace, body, pretty);

        // TODO: test validations
    }
    
}
