/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.kubernetes.client.apis;

import io.kubernetes.client.ApiException;
import io.kubernetes.client.models.V1DeleteOptions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThirdPartyResourcesApi
 */
@Ignore
public class ThirdPartyResourcesApiTest {

    private final ThirdPartyResourcesApi api = new ThirdPartyResourcesApi();

    
    /**
     * Create a Resource
     *
     * Creates a third party resource of the type specified
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createThirdPartyResourceTest() throws ApiException {
        String namespace = null;
        String fqdn = null;
        String resource = null;
        Object body = null;
        Object response = api.createThirdPartyResource(namespace, fqdn, resource, body);

        // TODO: test validations
    }
    
    /**
     * Deletes a specific Resource
     *
     * Deletes the specified Resource in the specified namespace
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteThirdPartyResourceTest() throws ApiException {
        V1DeleteOptions body = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        Object response = api.deleteThirdPartyResource(body, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * Gets a specific Resource
     *
     * Returns a specific Resource in a namespace
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getThirdPartyResourceTest() throws ApiException {
        String namespace = null;
        String name = null;
        String fqdn = null;
        String resource = null;
        Object response = api.getThirdPartyResource(namespace, name, fqdn, resource);

        // TODO: test validations
    }
    
    /**
     * Gets Resources
     *
     * Returns a list of Resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listThirdPartyResourceTest() throws ApiException {
        String fqdn = null;
        String resource = null;
        Boolean watch = null;
        Object response = api.listThirdPartyResource(fqdn, resource, watch);

        // TODO: test validations
    }
    
    /**
     * Update a Resource
     *
     * Update the specified third party resource of the type specified
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateThirdPartyResourceTest() throws ApiException {
        String namespace = null;
        String fqdn = null;
        String resource = null;
        Object body = null;
        Object response = api.updateThirdPartyResource(namespace, fqdn, resource, body);

        // TODO: test validations
    }
    
}
